name: Build libfreenect2

on:
  push:

jobs:
  build-linux:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact: linux
          - os: windows-latest
            artifact: windows
    runs-on: ${{matrix.os}}

    steps:
    - name: Clone libfreenect2
      run: git clone https://github.com/OpenKinect/libfreenect2.git
    - name: Install dependencies linux
      if: ${{matrix.os == 'ubuntu-latest'}}
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake pkg-config libusb-1.0-0-dev libturbojpeg0-dev libglfw3-dev
    - name: Install dependencies windows
      if: ${{matrix.os == 'windows-latest'}}
      shell: bash
      working-directory: libfreenect2
      run: |
        curl -LO https://github.com/libusb/libusb/releases/download/v1.0.27/libusb-1.0.27.7z
        7z x libusb-1.0.27.7z -odepends/libusb
        winget install --id "libjpeg-turbo.libjpeg-turbo.VC" --exact --source winget --accept-source-agreements --version "3.0.3" --silent --disable-interactivity  --accept-package-agreements --location $(pwd)/depends/libjpeg-turbo64
        curl -LO https://github.com/glfw/glfw/releases/download/3.4/glfw-3.4.bin.WIN64.zip
        7z x glfw-3.4.bin.WIN64.zip -odepends/glfw
        curl -LO https://github.com/KhronosGroup/OpenCL-SDK/releases/download/v2024.05.08/OpenCL-SDK-v2024.05.08-Win-x64.zip
        7z x OpenCL-SDK-v2024.05.08-Win-x64.zip -odepends/opencl
    
    - name: Configure
      run: cmake . -DBUILD_SHARED_LIBS=OFF -Bbuild -DCMAKE_INSTALL_PREFIX=$(pwd)/install
      working-directory: libfreenect2
      shell: bash
    - name: Build
      run: cmake --build build
      working-directory: libfreenect2
    - name: Install
      run: cmake --install build
      working-directory: libfreenect2
    - name: Upload library
      uses: actions/upload-artifact@v4
      with:
        name: libfreenect2-${{matrix.artifact}}
        path: libfreenect2/install
          
